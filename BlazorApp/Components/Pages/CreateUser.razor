@page "/create-user"
@using BlazorApp.Services
@using ApiContracts.DTOs
@inject IUserService UserService
@inject NavigationManager Navigation

<PageTitle>Opret Bruger</PageTitle>

<h3>Opret ny bruger</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success" role="alert">
        @successMessage
    </div>
}

<div class="card">
    <div class="card-body">
        <EditForm Model="@createUserDto" OnValidSubmit="@CreateUser">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="username" class="form-label">Brugernavn:</label>
                <InputText id="username" class="form-control" @bind-Value="createUserDto.UserName" />
            </div>

            <div class="mb-3">
                <label for="password" class="form-label">Password:</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="createUserDto.Password" />
            </div>

            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                @if (isLoading)
                {
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    <span>Opretter...</span>
                }
                else
                {
                    <span>Opret bruger</span>
                }
            </button>
        </EditForm>
    </div>
</div>

@code {
    private CreateUserDto createUserDto = new CreateUserDto { UserName = "", Password = "" };
    private string errorMessage = "";
    private string successMessage = "";
    private bool isLoading = false;

    private async Task CreateUser()
    {
        errorMessage = "";
        successMessage = "";
        isLoading = true;

        try
        {
            var result = await UserService.AddUserAsync(createUserDto);
            successMessage = $"Bruger '{result.Username}' oprettet med ID: {result.Id}";
            createUserDto = new CreateUserDto { UserName = "", Password = "" };
        }
        catch (Exception ex)
        {
            errorMessage = $"Fejl: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}